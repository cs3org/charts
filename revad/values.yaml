replicaCount: 1

image:
  repository: cs3org/revad
  tag: v1.18.0
  pullPolicy: Always

service:
  type: ClusterIP
  grpc:
    port: 19000
  http:
    port: 19001

extraVolumeMounts: []
extraVolumes: []

emptyDir:
  sizeLimit: ""

persistentVolume:
  ## If true, revad will create/use a Persistent Volume Claim
  ## If false, use emptyDir
  enabled: false

  ## Must match those of existing PV or dynamic provisioner
  ## Ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
  accessModes:
    - ReadWriteOnce

  annotations: {}

  ## If defined, PVC MUST be created manually before volume will be bound
  existingClaim: ""

  mountPath: /var/tmp/reva
  ## Subdirectory of the PV to mount. If the root directory is not empty
  subPath: ""
  size: 2Gi

  ## If set to "-", storageClassName: "": disables dynamic provisioning
  ## If undefined or null, chooses the default provisioner.
  # storageClass: "-"

  # volumeBindingMode: ""

## Environment variables in NAME:VALUE (dict) form
env: {}
  # REVA_ENV: value

## Environment variables in {name,value/valueFrom} (list) form
extraEnv: []
  # - name: REVA_ENV
  #   value: value
  # - name: REVA_ENV_FROM
  #   valueFrom:
  #     configMapKeyRef:
  #       name: configmap
  #       key: configmap_key
  # - name: REVA_SECRET_ENV
  #   valueFrom:
  #     secretKeyRef:
  #       name: secret
  #       key: secret_key

envFrom: []
  # - configMapRef:
  #     name: reva-envars
  # - secretRef:
  #     name: reva-secrets
EFSS: ""
HostURL: "localhost"
HostPort: "19000"
OCURL: "oc.docker"
SharedSecret: "123456"
CertFile: "revaoc1.crt"
CertKey: "revaoc1.key"
ingress:
  enabled: false
  services:
    http:
      hostname: http.revad.local
      path: /
      annotations: {}
        # kubernetes.io/ingress.class: nginx
        # nginx.ingress.kubernetes.io/ssl-redirect: "true"
      tls: []
        # Secrets must be present in the namespace beforehand.
        # - secretName: http-revad-tls
        #   hosts:
        #     - http.revad.local
    grpc:
      hostname: grpc.revad.local
      path: /
      annotations: {}
        # kubernetes.io/ingress.class: nginx
        # nginx.ingress.kubernetes.io/ssl-redirect: "true"
        # nginx.ingress.kubernetes.io/backend-protocol: "GRPC"
      tls: []
        # - secretName: grpc-revad-tls
        #   hosts:
        #     - grpc.revad.local

# https://reva.link/docs/config/
configFiles:
  revad.toml: |
    [grpc.services.gateway]
    [grpc.services.storageregistry]
    [grpc.services.storageprovider]
    [grpc.services.authprovider]
    [grpc.services.authregistry]
    [grpc.services.userprovider]
    [grpc.services.groupprovider]
    [grpc.services.usershareprovider]
    [grpc.services.publicshareprovider]
    [grpc.services.ocmcore]
    [grpc.services.ocmshareprovider]
    [grpc.services.ocminvitemanager]
    [grpc.services.ocmproviderauthorizer]

    [http.services.datagateway]
    [http.services.dataprovider]
    [http.services.prometheus]
    [http.services.ocmd]
    [http.services.ocdav]
    [http.services.ocs]
  oc.revad.toml: |
    [shared]
    gatewaysvc = "HOST_URL:HOST_PORT"

    [grpc]
    address = "0.0.0.0:HOST_PORT"

    [grpc.services.gateway]
    authregistrysvc = "HOST_URL:HOST_PORT"
    appprovidersvc = "HOST_URL:HOST_PORT"
    appregistry = "HOST_URL:HOST_PORT"
    storageregistrysvc = "HOST_URL:HOST_PORT"
    preferencessvc = "HOST_URL:HOST_PORT"
    userprovidersvc = "HOST_URL:HOST_PORT"
    usershareprovidersvc = "HOST_URL:HOST_PORT"
    publicshareprovidersvc = "HOST_URL:HOST_PORT"
    ocmcoresvc = "HOST_URL:HOST_PORT"
    ocmshareprovidersvc = "HOST_URL:HOST_PORT"
    ocminvitemanagersvc = "HOST_URL:HOST_PORT"
    ocmproviderauthorizersvc = "HOST_URL:HOST_PORT"
    commit_share_to_storage_grant = false
    datagateway = "http://localhost/data"
    transfer_expires = 6 # give it a moment

    [grpc.services.authregistry]
    driver = "static"

    [grpc.services.authregistry.drivers.static.rules]
    basic = "HOST_URL:HOST_PORT"

    [grpc.services.storageregistry]
    driver = "static"

    [grpc.services.storageregistry.drivers.static]
    home_provider = "/home"

    [grpc.services.storageregistry.drivers.static.rules]
    "/home" = {"address" = "HOST_URL:HOST_PORT"}
    "123e4567-e89b-12d3-a456-426655440000" = {"address" = "HOST_URL:HOST_PORT"}

    [grpc.services.usershareprovider]
    driver = "memory"

    [grpc.services.ocmcore]
    driver = "nextcloud"

    [grpc.services.ocmcore.drivers.nextcloud]
    endpoint = "https://OC_URL/index.php/apps/sciencemesh/"
    shared_secret = "SHARED_SECRET"
    mock_http = false

    [grpc.services.ocminvitemanager]
    driver = "json"

    [grpc.services.ocmshareprovider]
    driver = "nextcloud"

    [grpc.services.ocmshareprovider.drivers.nextcloud]
    endpoint = "https://OC_URL/index.php/apps/sciencemesh/"
    shared_secret = "SHARED_SECRET"
    mock_http = false

    [grpc.services.ocmproviderauthorizer]
    driver = "json"

    [grpc.services.ocmproviderauthorizer.drivers.json]
    providers = "providers.demo.json"
    verify_request_hostname = true

    [grpc.services.publicshareprovider]
    driver = "memory"

    [grpc.services.appprovider]
    driver = "demo"
    iopsecret = "testsecret"
    wopiurl = "http://0.0.0.0:8880/"
    wopibridgeurl = "http://localhost:8000/wopib"

    [grpc.services.appregistry]
    driver = "static"

    [grpc.services.appregistry.static.rules]
    "text/plain" = "HOST_URL:HOST_PORT"
    "text/markdown" = "HOST_URL:HOST_PORT"
    "application/compressed-markdown" = "HOST_URL:HOST_PORT"
    "application/vnd.oasis.opendocument.text" = "HOST_URL:HOST_PORT"
    "application/vnd.oasis.opendocument.spreadsheet" = "HOST_URL:HOST_PORT"
    "application/vnd.oasis.opendocument.presentation" = "HOST_URL:HOST_PORT"

    [grpc.services.storageprovider]
    driver = "nextcloud"

    [grpc.services.storageprovider.drivers.nextcloud]
    endpoint = "https://OC_URL/index.php/apps/sciencemesh/"
    shared_secret = "SHARED_SECRET"
    mock_http = false

    [grpc.services.authprovider]
    auth_manager = "nextcloud"

    [grpc.services.authprovider.auth_managers.nextcloud]
    endpoint = "https://OC_URL/index.php/apps/sciencemesh/"
    shared_secret = "SHARED_SECRET"
    mock_http = false

    [grpc.services.userprovider]
    driver = "nextcloud"

    [grpc.services.userprovider.drivers.nextcloud]
    endpoint = "https://OC_URL/index.php/apps/sciencemesh/"
    shared_secret = "SHARED_SECRET"
    mock_http = false

    [http]
    enabled_services = ["ocmd"]
    enabled_middlewares = ["providerauthorizer", "cors"]
    address = "0.0.0.0:443"
    certfile = "/etc/revad/tls/CERT_FILE"
    keyfile = "/etc/revad/tls/CERT_KEY"

    [http.services.dataprovider]
    driver = "localhome"

    [http.services.prometheus]
    [http.services.sysinfo]

    [http.services.dataprovider.drivers.localhome]
    user_layout = "{{.Username}}"

    [http.services.ocmd]
    prefix = "ocm"

    [http.services.ocmd.config]
    host = "HOST_URL"
    provider = "test-revaoc1"

    [http.middlewares.providerauthorizer]
    driver = "json"

    [http.middlewares.providerauthorizer.drivers.json]
    providers = "providers.demo.json"

    [http.services.ocs]
    prefix = "ocs"

    [http.services.ocdav]
    prefix = "ocdav"

    [http.middlewares.cors]
  users.json: |
    [
      {
        "id": {
          "opaque_id": "4c510ada-c86b-4815-8820-42cdf82c3d51",
          "idp": "HOST_URL:HOST_PORT"
        },
        "username": "einstein",
        "secret": "relativity",
        "mail": "einstein@example.org",
        "display_name": "Albert Einstein",
        "groups": ["sailing-lovers", "violin-haters", "physics-lovers"]
      },
      {
        "id": {
          "opaque_id": "f7fbf8c8-139b-4376-b307-cf0a8c2d0d9c",
          "idp": "HOST_URL:HOST_PORT"
        },
        "username": "marie",
        "secret": "radioactivity",
        "mail": "marie@example.org",
        "display_name": "Marie Curie",
        "groups": ["radium-lovers", "polonium-lovers", "physics-lovers"]
      },
      {
        "id": {
          "opaque_id": "932b4540-8d16-481e-8ef4-588e4b6b151c",
          "idp": "HOST_URL:HOST_PORT"
        },
        "username": "richard",
        "secret": "superfluidity",
        "mail": "richard@example.org",
        "display_name": "Richard Feynman",
        "groups": ["quantum-lovers", "philosophy-haters", "physics-lovers"]
      }
    ]

  groups.json: |
    [
      {
        "id": {
          "opaque_id": "sailing-lovers",
          "idp": "HOST_URL:HOST_PORT"
        },
        "group_name": "sailing-lovers",
        "mail": "sailing-lovers@example.org",
        "display_name": "Sailing Lovers",
        "gid_number": 123,
        "members": [
          {
            "id": {
              "opaque_id": "4c510ada-c86b-4815-8820-42cdf82c3d51",
              "idp": "HOST_URL:HOST_PORT"
            }
          }
        ]
      },
      {
        "id": {
          "opaque_id": "violin-haters",
          "idp": "HOST_URL:HOST_PORT"
        },
        "group_name": "violin-haters",
        "mail": "violin-haters@example.org",
        "display_name": "Violin Haters",
        "gid_number": 456,
        "members": [
          {
            "id": {
              "opaque_id": "4c510ada-c86b-4815-8820-42cdf82c3d51",
              "idp": "HOST_URL:HOST_PORT"
            }
          }
        ]
      },
      {
        "id": {
          "opaque_id": "radium-lovers",
          "idp": "HOST_URL:HOST_PORT"
        },
        "group_name": "radium-lovers",
        "mail": "radium-lovers@example.org",
        "display_name": "Radium Lovers",
        "gid_number": 789,
        "members": [
          {
            "id": {
              "opaque_id": "f7fbf8c8-139b-4376-b307-cf0a8c2d0d9c",
              "idp": "HOST_URL:HOST_PORT"
            }
          }
        ]
      },
      {
        "id": {
          "opaque_id": "polonium-lovers",
          "idp": "HOST_URL:HOST_PORT"
        },
        "group_name": "polonium-lovers",
        "mail": "polonium-lovers@example.org",
        "display_name": "Polonium Lovers",
        "gid_number": 987,
        "members": [
          {
            "id": {
              "opaque_id": "f7fbf8c8-139b-4376-b307-cf0a8c2d0d9c",
              "idp": "HOST_URL:HOST_PORT"
            }
          }
        ]
      },
      {
        "id": {
          "opaque_id": "quantum-lovers",
          "idp": "HOST_URL:HOST_PORT"
        },
        "group_name": "quantum-lovers",
        "mail": "quantum-lovers@example.org",
        "display_name": "Quantum Lovers",
        "gid_number": 654,
        "members": [
          {
            "id": {
              "opaque_id": "932b4540-8d16-481e-8ef4-588e4b6b151c",
              "idp": "HOST_URL:HOST_PORT"
            }
          }
        ]
      },
      {
        "id": {
          "opaque_id": "philosophy-haters",
          "idp": "HOST_URL:HOST_PORT"
        },
        "group_name": "philosophy-haters",
        "mail": "philosophy-haters@example.org",
        "display_name": "Philosophy Haters",
        "gid_number": 321,
        "members": [
          {
            "id": {
              "opaque_id": "932b4540-8d16-481e-8ef4-588e4b6b151c",
              "idp": "HOST_URL:HOST_PORT"
            }
          }
        ]
      },
      {
        "id": {
          "opaque_id": "physics-lovers",
          "idp": "HOST_URL:HOST_PORT"
        },
        "group_name": "physics-lovers",
        "mail": "physics-lovers@example.org",
        "display_name": "Physics Lovers",
        "gid_number": 101,
        "members": [
          {
            "id": {
              "opaque_id": "4c510ada-c86b-4815-8820-42cdf82c3d51",
              "idp": "HOST_URL:HOST_PORT"
            }
          },
          {
            "id": {
              "opaque_id": "f7fbf8c8-139b-4376-b307-cf0a8c2d0d9c",
              "idp": "HOST_URL:HOST_PORT"
            }
          },
          {
            "id": {
              "opaque_id": "932b4540-8d16-481e-8ef4-588e4b6b151c",
              "idp": "HOST_URL:HOST_PORT"
            }
          }
        ]
      }
    ]

  ocm-providers.json: |
    []
